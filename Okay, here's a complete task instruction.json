好的，这是一个为MCP设计的稳定且详细的工作流JSON，它将完全按照您的要求执行：遍历URL列表，尝试导航，失败则快照，最多重试两次，并确保每个URL都得到处理。

{
  "task_name": "ProcessURLListWithRetryAndSnapshot",
  "description": "Iterates through a list of URLs. For each URL, attempts to navigate. If navigation fails, attempts a snapshot. This entire process (navigate then snapshot if needed) is tried up to two times per URL. All outcomes are recorded.",
  "version": "1.1", // Incremented version for clarity
  "tasks": [
    {
      "task_id": "1_initialize_url_list",
      "task_type": "mcp.taskmanager.create_variable",
      "description": "Create the list of URLs to process.",
      "inputs": {
        "variable_name": "url_list_to_process",
        "variable_value": [
            https://www.reuters.com/world/china/this-us-owned-factory-china-made-toys-walmart-tariffs-put-it-life-support-2025-05-12/
            https://www.reuters.com/world/asia-pacific/military-officials-india-pakistan-discuss-next-steps-india-says-ceasefire-holds-2025-05-12/
            https://www.reuters.com/world/asia-pacific/south-koreas-presidential-campaigns-kick-off-focus-ailing-economy-2025-05-12/
            https://www.reuters.com/world/former-taiwan-president-tsai-make-sensitive-visit-britain-this-week-2025-05-12/
            https://www.reuters.com/markets/europe/global-markets-view-europe-2025-05-12/
            https://www.reuters.com/business/media-telecom/softbank-group-seen-booking-modest-fourth-quarter-loss-vision-fund-suffers-2025-05-12/
            https://www.reuters.com/markets/commodities/oil-prices-rise-us-china-trade-talks-soothe-market-jitters-2025-05-12/
            https://www.reuters.com/business/retail-consumer/moet-hennessy-woes-test-alexandre-arnaults-credentials-2025-05-12/
            https://www.reuters.com/business/finance/danone-acquires-us-plant-based-organic-formula-maker-kate-farms-2025-05-12/
            https://www.reuters.com/business/energy/traders-rebrand-venezuelan-oil-china-brazilian-sources-tanker-trackers-say-2025-05-12/
            https://www.reuters.com/world/middle-east/israel-says-not-committed-hamas-ceasefire-only-safe-corridor-us-hostage-release-2025-05-12/
            https://www.reuters.com/world/americas/argentinas-top-court-finds-80-boxes-nazi-materials-its-basement-2025-05-12/
            https://www.reuters.com/sports/golf/new-zealander-fox-makes-his-mark-stateside-mothers-day-myrtle-beach-2025-05-12/
            https://www.reuters.com/world/china/hedge-flow-hedge-funds-re-enter-chinese-equities-trade-talk-optimism-morgan-2025-05-12/
            https://www.reuters.com/sports/soccer/week-asian-football-2025-05-12/
            https://www.reuters.com/markets/currencies/gold-falls-positive-us-china-talks-erode-safe-haven-appeal-2025-05-12/
            https://www.reuters.com/world/china/stocks-dollar-up-investors-wait-details-sino-us-trade-talks-2025-05-12/
            https://www.reuters.com/business/environment/magnitude-55-earthquake-strikes-chinas-tibet-2025-05-12/
            https://www.reuters.com/world/china/dollar-gains-versus-yen-us-china-trade-optimism-kiwi-climbs-2025-05-12/
            https://www.reuters.com/markets/japans-ishiba-signals-increasing-corn-imports-part-us-trade-talks-2025-05-12/
            https://www.reuters.com/world/china-hosts-latin-american-caribbean-nations-amid-us-trade-war-talks-2025-05-12/
        ]
      },
      "outputs": {
        "variable_name": "url_list_to_process"
      }
    },
    {
      "task_id": "2_initialize_status_reports_list",
      "task_type": "mcp.taskmanager.create_variable",
      "description": "Initialize an empty list to store processing reports for each URL.",
      "inputs": {
        "variable_name": "processing_status_reports",
        "variable_value": []
      },
      "outputs": {
        "variable_name": "processing_status_reports"
      }
    },
    {
      "task_id": "3_process_urls_loop",
      "task_type": "mcp.taskmanager.loop_list",
      "description": "Loop through each URL in the url_list_to_process.",
      "inputs": {
        "list_variable_name": "url_list_to_process",
        "loop_item_variable_name": "current_url"
      },
      "loop_tasks": [
        {
          "task_id": "3.1_initialize_current_url_report",
          "task_type": "mcp.taskmanager.create_variable",
          "description": "Initialize the report dictionary for the current URL.",
          "inputs": {
            "variable_name": "current_url_report",
            "variable_value_template": {
              "URL": "{{current_url}}",
              "最终状态": "",
              "尝试次数": 0, // Will be 1 or 2
              "成功方式": "",
              "失败原因": ""
            }
          },
          "outputs": {
            "variable_name": "current_url_report"
          }
        },

        // --- ATTEMPT 1 ---
        {
          "task_id": "3.2_increment_attempt_counter_1",
          "task_type": "mcp.taskmanager.update_variable",
          "description": "Set attempt counter to 1 for current URL.",
          "inputs": {
            "variable_name": "current_url_report",
            "update_actions": [
              {"action": "set_value", "key": "尝试次数", "value": 1}
            ]
          }
        },
        {
          "task_id": "3.3_navigate_attempt_1",
          "task_type": "mcp.config.usrlocalmcp.browsermcp/browser_navigate",
          "description": "Attempt 1: Navigate to the current URL.",
          "inputs": {
            "url_template": "{{current_url}}",
            "timeout": 18 // 假设超时时间
          },
          "outputs": {
            "result_variable_name": "navigate_attempt_1_result"
            // 假设工具返回: { "success": true/false, "error_message": "...", "content": "..." }
          },
          "on_failure": "continue_to_next_task_in_loop" // 如果工具本身执行失败，仍继续尝试处理该URL的下一步
        },
        {
          "task_id": "3.4_check_navigate_attempt_1",
          "task_type": "mcp.taskmanager.conditional_execution",
          "description": "Check if navigation in Attempt 1 succeeded.",
          "inputs": {
            // 检查 'navigate_attempt_1_result' 是否存在且其 'success' 字段为 True
            "condition_template": "{{'navigate_attempt_1_result' in globals() and navigate_attempt_1_result.success == True}}"
          },
          "on_true": [ // Navigation Attempt 1 Succeeded
            {
              "task_id": "3.4.1_update_report_nav1_success",
              "task_type": "mcp.taskmanager.update_variable",
              "inputs": {
                "variable_name": "current_url_report",
                "update_actions": [
                  {"action": "set_value", "key": "最终状态", "value": "成功"},
                  {"action": "set_value", "key": "成功方式", "value": "导航 (尝试 1)"}
                ]
              }
            },
            {
              "task_id": "3.4.2_add_report_and_continue_nav1_success",
              "task_type": "mcp.taskmanager.update_variable",
              "description": "Add report to list and prepare to skip to next URL.",
              "inputs": {
                "variable_name": "processing_status_reports",
                "update_actions": [
                  {"action": "append_value", "value_from_variable": "current_url_report"}
                ]
              },
              "next_task_in_loop_if_true": "continue_loop_control" // Hypothetical direct jump if supported
            },
            { // If direct jump isn't an action of update_variable, use a dedicated continue task
              "task_id": "3.4.3_continue_loop_nav1_success",
              "task_type": "mcp.taskmanager.continue_loop",
              "description": "URL processed successfully in attempt 1 (navigation)."
            }
          ],
          "on_false": [ // Navigation Attempt 1 Failed, try Snapshot for Attempt 1
            {
              "task_id": "3.4.4_snapshot_attempt_1",
              "task_type": "mcp.config.usrlocalmcp.browsermcp/browser_snapshot",
              "description": "Attempt 1: Take snapshot after failed navigation.",
              "inputs": {
                "url_template": "{{current_url}}",
                "timeout": 18
              },
              "outputs": {
                "result_variable_name": "snapshot_attempt_1_result"
                 // 假设工具返回: { "success": true/false, "error_message": "...", "snapshot_path": "..." }
              },
              "on_failure": "continue_to_next_task_in_loop"
            },
            {
              "task_id": "3.4.5_check_snapshot_attempt_1",
              "task_type": "mcp.taskmanager.conditional_execution",
              "description": "Check if snapshot in Attempt 1 succeeded.",
              "inputs": {
                "condition_template": "{{'snapshot_attempt_1_result' in globals() and snapshot_attempt_1_result.success == True}}"
              },
              "on_true": [ // Snapshot Attempt 1 Succeeded
                {
                  "task_id": "3.4.5.1_update_report_snap1_success",
                  "task_type": "mcp.taskmanager.update_variable",
                  "inputs": {
                    "variable_name": "current_url_report",
                    "update_actions": [
                      {"action": "set_value", "key": "最终状态", "value": "成功"},
                      {"action": "set_value", "key": "成功方式", "value": "快照 (导航尝试 1 失败后)"}
                    ]
                  }
                },
                {
                  "task_id": "3.4.5.2_add_report_and_continue_snap1_success",
                  "task_type": "mcp.taskmanager.update_variable",
                  "inputs": {
                    "variable_name": "processing_status_reports",
                    "update_actions": [
                      {"action": "append_value", "value_from_variable": "current_url_report"}
                    ]
                  },
                  "next_task_in_loop_if_true": "continue_loop_control"
                },
                {
                  "task_id": "3.4.5.3_continue_loop_snap1_success",
                  "task_type": "mcp.taskmanager.continue_loop",
                  "description": "URL processed successfully in attempt 1 (snapshot)."
                }
              ],
              "on_false": [
                // Attempt 1 (Nav & Snap) FAILED. Proceed to Attempt 2.
                // No action needed here, flow will continue to Attempt 2 tasks.
                // The 'current_url_report.尝试次数' is already 1.
                // '最终状态' is still empty, indicating it hasn't succeeded yet.
              ]
            }
          ]
        },

        // --- ATTEMPT 2 (Only runs if Attempt 1 Nav and Snapshot failed) ---
        // The flow naturally reaches here if previous 'continue_loop' tasks were not hit.
        {
          "task_id": "3.5_increment_attempt_counter_2",
          "task_type": "mcp.taskmanager.update_variable",
          "description": "Set attempt counter to 2 for current URL.",
          "inputs": {
            "variable_name": "current_url_report",
            "update_actions": [
              {"action": "set_value", "key": "尝试次数", "value": 2}
            ]
          }
        },
        {
          "task_id": "3.6_navigate_attempt_2",
          "task_type": "mcp.config.usrlocalmcp.browsermcp/browser_navigate",
          "description": "Attempt 2: Navigate to the current URL.",
          "inputs": {
            "url_template": "{{current_url}}",
            "timeout": 18
          },
          "outputs": {
            "result_variable_name": "navigate_attempt_2_result"
          },
          "on_failure": "continue_to_next_task_in_loop"
        },
        {
          "task_id": "3.7_check_navigate_attempt_2",
          "task_type": "mcp.taskmanager.conditional_execution",
          "description": "Check if navigation in Attempt 2 succeeded.",
          "inputs": {
            "condition_template": "{{'navigate_attempt_2_result' in globals() and navigate_attempt_2_result.success == True}}"
          },
          "on_true": [ // Navigation Attempt 2 Succeeded
            {
              "task_id": "3.7.1_update_report_nav2_success",
              "task_type": "mcp.taskmanager.update_variable",
              "inputs": {
                "variable_name": "current_url_report",
                "update_actions": [
                  {"action": "set_value", "key": "最终状态", "value": "成功"},
                  {"action": "set_value", "key": "成功方式", "value": "导航 (尝试 2)"}
                ]
              }
            }
            // Report will be added by the final step (3.9) for this URL.
            // Do NOT use continue_loop here, let it flow to add report.
          ],
          "on_false": [ // Navigation Attempt 2 Failed, try Snapshot for Attempt 2
            {
              "task_id": "3.7.2_snapshot_attempt_2",
              "task_type": "mcp.config.usrlocalmcp.browsermcp/browser_snapshot",
              "description": "Attempt 2: Take snapshot after failed navigation.",
              "inputs": {
                "url_template": "{{current_url}}",
                "timeout": 18
              },
              "outputs": {
                "result_variable_name": "snapshot_attempt_2_result"
              },
              "on_failure": "continue_to_next_task_in_loop"
            },
            {
              "task_id": "3.7.3_check_snapshot_attempt_2",
              "task_type": "mcp.taskmanager.conditional_execution",
              "description": "Check if snapshot in Attempt 2 succeeded.",
              "inputs": {
                "condition_template": "{{'snapshot_attempt_2_result' in globals() and snapshot_attempt_2_result.success == True}}"
              },
              "on_true": [ // Snapshot Attempt 2 Succeeded
                {
                  "task_id": "3.7.3.1_update_report_snap2_success",
                  "task_type": "mcp.taskmanager.update_variable",
                  "inputs": {
                    "variable_name": "current_url_report",
                    "update_actions": [
                      {"action": "set_value", "key": "最终状态", "value": "成功"},
                      {"action": "set_value", "key": "成功方式", "value": "快照 (导航尝试 2 失败后)"}
                    ]
                  }
                }
                // Report will be added by the final step (3.9) for this URL.
              ],
              "on_false": [ // Snapshot Attempt 2 Also Failed
                {
                  "task_id": "3.7.3.2_update_report_all_failed",
                  "task_type": "mcp.taskmanager.update_variable",
                  "inputs": {
                    "variable_name": "current_url_report",
                    "update_actions": [
                      {"action": "set_value", "key": "最终状态", "value": "失败"},
                      {"action": "set_value", "key": "失败原因", "value": "两次尝试的导航和快照均失败"}
                    ]
                  }
                }
              ]
            }
          ]
        },
        { // This task ALWAYS runs as the last step for a URL IF it wasn't skipped by a 'continue_loop' in Attempt 1.
          // It ensures that if Attempt 2 was reached, the report is added, regardless of Attempt 2's outcome.
          "task_id": "3.8_add_final_report_for_url_if_not_added",
          "task_type": "mcp.taskmanager.conditional_execution",
          "description": "Add current URL report to the main list if it hasn't been marked as success in attempt 1.",
          "inputs": {
            // Only add if "最终状态" is still empty (meaning not successful in Attempt 1) OR "成功方式" contains "(尝试 2)"
            "condition_template": "{{current_url_report.最终状态 == '' or '(尝试 2)' in current_url_report.成功方式 or current_url_report.最终状态 == '失败'}}"
          },
          "on_true": [
            {
                "task_id": "3.8.1_add_report_to_list_final",
                "task_type": "mcp.taskmanager.update_variable",
                "inputs": {
                    "variable_name": "processing_status_reports",
                    "update_actions": [
                    {"action": "append_value", "value_from_variable": "current_url_report"}
                    ]
                }
            }
          ]
        },
        { // Placeholder for explicit loop control if needed by MCP, can be an empty task if not.
          "task_id": "continue_loop_control",
          "task_type": "mcp.taskmanager.no_op", // Or similar if MCP has a no-operation task
          "description": "Control point for explicit continue_loop if MCP requires target task ID."
        }
      ] // End of loop_tasks
    },
    {
      "task_id": "4_final_reporting",
      "task_type": "mcp.taskmanager.log_message",
      "description": "Log the final processing status reports for all URLs.",
      "inputs": {
        "message_template": "URL Processing Complete. Reports:\n{{processing_status_reports | to_json_pretty}}", // Pretty print JSON for readability
        "log_level": "INFO"
      }
    }
  ]
}


关键点和说明：

URL 列表初始化 (1_initialize_url_list):

这里硬编码了您提供的URL列表。如果您的URL列表是动态生成的，您需要调整此任务以从其他来源（如文件、API、上一个任务的输出）获取URL列表。

状态报告列表 (2_initialize_status_reports_list):

创建一个空列表 processing_status_reports 来存储每个URL的处理结果。

遍历URL (3_process_urls_loop):

使用 mcp.taskmanager.loop_list 遍历 url_list_to_process。

current_url 是循环中当前正在处理的URL。

当前URL报告初始化 (3.1_initialize_current_url_report):

为每个 current_url 创建一个报告字典 current_url_report。

新增了 "尝试次数" 字段，初始化为0，会在每次尝试时更新。

尝试逻辑 (Attempt 1 & Attempt 2):

尝试计数器更新: 3.2_increment_attempt_counter_1 和 3.5_increment_attempt_counter_2 分别将 current_url_report.尝试次数 设置为1或2。

导航 (browser_navigate): 执行导航。

on_failure: "continue_to_next_task_in_loop": 这是一个重要的容错机制。如果 browser_navigate 工具本身执行失败（例如，工具崩溃，而不是导航逻辑上的失败如超时），MCP将尝试继续执行该URL后续的步骤（即条件检查）。条件检查将基于 navigate_attempt_x_result.success (如果结果变量被设置) 或通过检查结果变量是否存在来判断导航是否成功。

条件检查 (mcp.taskmanager.conditional_execution):

condition_template: "{{'variable_name' in globals() and variable_name.success == True}}": 这种写法更健壮，它首先检查输出变量（如 navigate_attempt_1_result）是否已在当前作用域中定义（in globals() 或MCP等效的作用域检查），然后再检查其 success 属性。这可以防止因工具执行失败未产生输出变量而导致的错误。

on_true (成功): 更新报告，将报告添加到 processing_status_reports，然后使用 mcp.taskmanager.continue_loop 立即跳到列表中的下一个URL，不再执行当前URL的后续尝试。

on_false (失败):

执行快照 (browser_snapshot)。

再次进行条件检查快照结果。

如果快照也失败（在第一次尝试中），则流程会自然地继续到第二次尝试的步骤。

如果第二次尝试的所有操作（导航和快照）都失败，则将 最终状态 设置为 "失败"，并记录 失败原因。

确保报告被添加 (3.8_add_final_report_for_url_if_not_added):

这个任务确保如果URL处理进入了第二轮尝试（意味着第一轮未成功跳过），或者第一轮失败后最终以失败告终，其报告会被添加到 processing_status_reports。

如果URL在第一次尝试中通过导航或快照成功，它会通过 continue_loop 跳过此步骤，因为报告已经被添加了。

条件 {{current_url_report.最终状态 == '' or '(尝试 2)' in current_url_report.成功方式 or current_url_report.最终状态 == '失败'}} 确保只有在报告尚未因尝试1成功而添加，或者是在尝试2中处理的，或者最终失败时，才会添加。

continue_loop_control 和 next_task_in_loop_if_true:

mcp.taskmanager.continue_loop 通常会直接跳到循环的下一次迭代。

next_task_in_loop_if_true: "continue_loop_control" 是一个假设性的MCP功能，表示如果条件为真，并且该任务（如 update_variable）有这个属性，它可以直接跳转到循环内的指定任务ID，这里用于确保在添加报告后能正确地触发 continue_loop（如果 continue_loop 不能直接作为 on_true 数组中的最后一项）。如果MCP不支持这种细粒度跳转，则 3.4.3 和 3.4.5.3 这样的独立 continue_loop 任务是标准做法。

最终报告 (4_final_reporting):

使用 mcp.taskmanager.log_message 打印所有收集到的处理报告。

| to_json_pretty (假设MCP的模板引擎支持类似Jinja2的过滤器) 可以使输出的JSON更易读。

这个工作流设计得比较细致，以确保每个URL都按照指定的逻辑（导航->快照，最多两次）被处理，并且结果被正确记录。请根据您的MCP环境的具体特性（如变量作用域检查的确切语法、continue_loop 的行为等）进行微调。